struct Node * detectLoop(struct Node *head){
    if(head->next==NULL)
    {
        return NULL;
    }
    struct Node *slow=head;
    struct Node *fast=head;
    while(fast!=NULL){
        slow=slow->next;
        fast=fast->next;
        if(fast!=NULL)
        fast=fast->next;
        if(slow==fast){
            return slow;
        }
    }
    return NULL;
}
//Function to find the length of a loop in the linked list.
int countNodesinLoop(struct Node *head)
{
    struct Node *intersection=detectLoop(head);
    if(intersection==NULL){
        return 0;
    }
    struct Node *slow=head;
    while(slow!=intersection){
        slow=slow->next;
        intersection=intersection->next;
    }
    //slow will now be the starting node of loop 
    struct Node *temp=slow;
    int count=0;
    while(temp->next!=slow){
        count++;
        temp=temp->next;
    }
    return count+1;
}
